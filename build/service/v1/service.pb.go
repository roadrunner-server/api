// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: service/v1/service.proto

package serviceV1

import (
	v1 "github.com/roadrunner-server/api/v4/build/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Ok            bool                   `protobuf:"varint,2,opt,name=ok,proto3" json:"ok,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Response) Reset() {
	*x = Response{}
	mi := &file_service_v1_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_v1_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_service_v1_service_proto_rawDescGZIP(), []int{0}
}

func (x *Response) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Response) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type Create struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Name            string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Command         string                 `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
	ProcessNum      int64                  `protobuf:"varint,3,opt,name=process_num,json=processNum,proto3" json:"process_num,omitempty"`
	ExecTimeout     int64                  `protobuf:"varint,4,opt,name=exec_timeout,json=execTimeout,proto3" json:"exec_timeout,omitempty"`
	RemainAfterExit bool                   `protobuf:"varint,5,opt,name=remain_after_exit,json=remainAfterExit,proto3" json:"remain_after_exit,omitempty"`
	Env             map[string]string      `protobuf:"bytes,6,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	RestartSec      uint64                 `protobuf:"varint,7,opt,name=restart_sec,json=restartSec,proto3" json:"restart_sec,omitempty"`
	// new in 2023.2
	ServiceNameInLogs bool   `protobuf:"varint,8,opt,name=service_name_in_logs,json=serviceNameInLogs,proto3" json:"service_name_in_logs,omitempty"`
	TimeoutStopSec    uint64 `protobuf:"varint,9,opt,name=timeout_stop_sec,json=timeoutStopSec,proto3" json:"timeout_stop_sec,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Create) Reset() {
	*x = Create{}
	mi := &file_service_v1_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Create) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Create) ProtoMessage() {}

func (x *Create) ProtoReflect() protoreflect.Message {
	mi := &file_service_v1_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Create.ProtoReflect.Descriptor instead.
func (*Create) Descriptor() ([]byte, []int) {
	return file_service_v1_service_proto_rawDescGZIP(), []int{1}
}

func (x *Create) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Create) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *Create) GetProcessNum() int64 {
	if x != nil {
		return x.ProcessNum
	}
	return 0
}

func (x *Create) GetExecTimeout() int64 {
	if x != nil {
		return x.ExecTimeout
	}
	return 0
}

func (x *Create) GetRemainAfterExit() bool {
	if x != nil {
		return x.RemainAfterExit
	}
	return false
}

func (x *Create) GetEnv() map[string]string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *Create) GetRestartSec() uint64 {
	if x != nil {
		return x.RestartSec
	}
	return 0
}

func (x *Create) GetServiceNameInLogs() bool {
	if x != nil {
		return x.ServiceNameInLogs
	}
	return false
}

func (x *Create) GetTimeoutStopSec() uint64 {
	if x != nil {
		return x.TimeoutStopSec
	}
	return 0
}

type Statuses struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        []*Status              `protobuf:"bytes,1,rep,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Statuses) Reset() {
	*x = Statuses{}
	mi := &file_service_v1_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Statuses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Statuses) ProtoMessage() {}

func (x *Statuses) ProtoReflect() protoreflect.Message {
	mi := &file_service_v1_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Statuses.ProtoReflect.Descriptor instead.
func (*Statuses) Descriptor() ([]byte, []int) {
	return file_service_v1_service_proto_rawDescGZIP(), []int{2}
}

func (x *Statuses) GetStatus() []*Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type Status struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	CpuPercent  float32                `protobuf:"fixed32,1,opt,name=cpu_percent,json=cpuPercent,proto3" json:"cpu_percent,omitempty"`
	Pid         int32                  `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
	MemoryUsage uint64                 `protobuf:"varint,3,opt,name=memory_usage,json=memoryUsage,proto3" json:"memory_usage,omitempty"`
	Command     string                 `protobuf:"bytes,4,opt,name=command,proto3" json:"command,omitempty"`
	// error state
	Status        *v1.Status `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Status) Reset() {
	*x = Status{}
	mi := &file_service_v1_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_service_v1_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_service_v1_service_proto_rawDescGZIP(), []int{3}
}

func (x *Status) GetCpuPercent() float32 {
	if x != nil {
		return x.CpuPercent
	}
	return 0
}

func (x *Status) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *Status) GetMemoryUsage() uint64 {
	if x != nil {
		return x.MemoryUsage
	}
	return 0
}

func (x *Status) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *Status) GetStatus() *v1.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type Service struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Service) Reset() {
	*x = Service{}
	mi := &file_service_v1_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service) ProtoMessage() {}

func (x *Service) ProtoReflect() protoreflect.Message {
	mi := &file_service_v1_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service.ProtoReflect.Descriptor instead.
func (*Service) Descriptor() ([]byte, []int) {
	return file_service_v1_service_proto_rawDescGZIP(), []int{4}
}

func (x *Service) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type List struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Services      []string               `protobuf:"bytes,1,rep,name=services,proto3" json:"services,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *List) Reset() {
	*x = List{}
	mi := &file_service_v1_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*List) ProtoMessage() {}

func (x *List) ProtoReflect() protoreflect.Message {
	mi := &file_service_v1_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use List.ProtoReflect.Descriptor instead.
func (*List) Descriptor() ([]byte, []int) {
	return file_service_v1_service_proto_rawDescGZIP(), []int{5}
}

func (x *List) GetServices() []string {
	if x != nil {
		return x.Services
	}
	return nil
}

var File_service_v1_service_proto protoreflect.FileDescriptor

const file_service_v1_service_proto_rawDesc = "" +
	"\n" +
	"\x18service/v1/service.proto\x12\n" +
	"service.v1\x1a\x1bcommon/v1/grpc_status.proto\"4\n" +
	"\bResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x0e\n" +
	"\x02ok\x18\x02 \x01(\bR\x02ok\"\x89\x03\n" +
	"\x06Create\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\acommand\x18\x02 \x01(\tR\acommand\x12\x1f\n" +
	"\vprocess_num\x18\x03 \x01(\x03R\n" +
	"processNum\x12!\n" +
	"\fexec_timeout\x18\x04 \x01(\x03R\vexecTimeout\x12*\n" +
	"\x11remain_after_exit\x18\x05 \x01(\bR\x0fremainAfterExit\x12-\n" +
	"\x03env\x18\x06 \x03(\v2\x1b.service.v1.Create.EnvEntryR\x03env\x12\x1f\n" +
	"\vrestart_sec\x18\a \x01(\x04R\n" +
	"restartSec\x12/\n" +
	"\x14service_name_in_logs\x18\b \x01(\bR\x11serviceNameInLogs\x12(\n" +
	"\x10timeout_stop_sec\x18\t \x01(\x04R\x0etimeoutStopSec\x1a6\n" +
	"\bEnvEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"6\n" +
	"\bStatuses\x12*\n" +
	"\x06status\x18\x01 \x03(\v2\x12.service.v1.StatusR\x06status\"\xa3\x01\n" +
	"\x06Status\x12\x1f\n" +
	"\vcpu_percent\x18\x01 \x01(\x02R\n" +
	"cpuPercent\x12\x10\n" +
	"\x03pid\x18\x02 \x01(\x05R\x03pid\x12!\n" +
	"\fmemory_usage\x18\x03 \x01(\x04R\vmemoryUsage\x12\x18\n" +
	"\acommand\x18\x04 \x01(\tR\acommand\x12)\n" +
	"\x06status\x18\x05 \x01(\v2\x11.common.v1.StatusR\x06status\"\x1d\n" +
	"\aService\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"\"\n" +
	"\x04List\x12\x1a\n" +
	"\bservices\x18\x01 \x03(\tR\bservicesB\x84\x01Z>github.com/roadrunner-server/api/v4/build/service/v1;serviceV1\xca\x02\x19RoadRunner\\Service\\DTO\\V1\xe2\x02%RoadRunner\\Service\\DTO\\V1\\GPBMetadatab\x06proto3"

var (
	file_service_v1_service_proto_rawDescOnce sync.Once
	file_service_v1_service_proto_rawDescData []byte
)

func file_service_v1_service_proto_rawDescGZIP() []byte {
	file_service_v1_service_proto_rawDescOnce.Do(func() {
		file_service_v1_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_service_v1_service_proto_rawDesc), len(file_service_v1_service_proto_rawDesc)))
	})
	return file_service_v1_service_proto_rawDescData
}

var file_service_v1_service_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_service_v1_service_proto_goTypes = []any{
	(*Response)(nil),  // 0: service.v1.Response
	(*Create)(nil),    // 1: service.v1.Create
	(*Statuses)(nil),  // 2: service.v1.Statuses
	(*Status)(nil),    // 3: service.v1.Status
	(*Service)(nil),   // 4: service.v1.Service
	(*List)(nil),      // 5: service.v1.List
	nil,               // 6: service.v1.Create.EnvEntry
	(*v1.Status)(nil), // 7: common.v1.Status
}
var file_service_v1_service_proto_depIdxs = []int32{
	6, // 0: service.v1.Create.env:type_name -> service.v1.Create.EnvEntry
	3, // 1: service.v1.Statuses.status:type_name -> service.v1.Status
	7, // 2: service.v1.Status.status:type_name -> common.v1.Status
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_service_v1_service_proto_init() }
func file_service_v1_service_proto_init() {
	if File_service_v1_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_service_v1_service_proto_rawDesc), len(file_service_v1_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_service_v1_service_proto_goTypes,
		DependencyIndexes: file_service_v1_service_proto_depIdxs,
		MessageInfos:      file_service_v1_service_proto_msgTypes,
	}.Build()
	File_service_v1_service_proto = out.File
	file_service_v1_service_proto_goTypes = nil
	file_service_v1_service_proto_depIdxs = nil
}
