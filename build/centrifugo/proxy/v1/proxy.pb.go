// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: centrifugo/proxy/v1/proxy.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Disconnect struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          uint32                 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Disconnect) Reset() {
	*x = Disconnect{}
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Disconnect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Disconnect) ProtoMessage() {}

func (x *Disconnect) ProtoReflect() protoreflect.Message {
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Disconnect.ProtoReflect.Descriptor instead.
func (*Disconnect) Descriptor() ([]byte, []int) {
	return file_centrifugo_proxy_v1_proxy_proto_rawDescGZIP(), []int{0}
}

func (x *Disconnect) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Disconnect) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type Error struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          uint32                 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Temporary     bool                   `protobuf:"varint,3,opt,name=temporary,proto3" json:"temporary,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Error) Reset() {
	*x = Error{}
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_centrifugo_proxy_v1_proxy_proto_rawDescGZIP(), []int{1}
}

func (x *Error) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Error) GetTemporary() bool {
	if x != nil {
		return x.Temporary
	}
	return false
}

type ConnectRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Client        string                 `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
	Transport     string                 `protobuf:"bytes,2,opt,name=transport,proto3" json:"transport,omitempty"`
	Protocol      string                 `protobuf:"bytes,3,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Encoding      string                 `protobuf:"bytes,4,opt,name=encoding,proto3" json:"encoding,omitempty"`
	Data          []byte                 `protobuf:"bytes,10,opt,name=data,proto3" json:"data,omitempty"`
	B64Data       string                 `protobuf:"bytes,11,opt,name=b64data,proto3" json:"b64data,omitempty"`
	Name          string                 `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
	Version       string                 `protobuf:"bytes,13,opt,name=version,proto3" json:"version,omitempty"`
	Channels      []string               `protobuf:"bytes,14,rep,name=channels,proto3" json:"channels,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectRequest) Reset() {
	*x = ConnectRequest{}
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectRequest) ProtoMessage() {}

func (x *ConnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectRequest.ProtoReflect.Descriptor instead.
func (*ConnectRequest) Descriptor() ([]byte, []int) {
	return file_centrifugo_proxy_v1_proxy_proto_rawDescGZIP(), []int{2}
}

func (x *ConnectRequest) GetClient() string {
	if x != nil {
		return x.Client
	}
	return ""
}

func (x *ConnectRequest) GetTransport() string {
	if x != nil {
		return x.Transport
	}
	return ""
}

func (x *ConnectRequest) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *ConnectRequest) GetEncoding() string {
	if x != nil {
		return x.Encoding
	}
	return ""
}

func (x *ConnectRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConnectRequest) GetB64Data() string {
	if x != nil {
		return x.B64Data
	}
	return ""
}

func (x *ConnectRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConnectRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ConnectRequest) GetChannels() []string {
	if x != nil {
		return x.Channels
	}
	return nil
}

type SubscribeOptions struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	ExpireAt      int64                    `protobuf:"varint,1,opt,name=expire_at,json=expireAt,proto3" json:"expire_at,omitempty"`
	Info          []byte                   `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	B64Info       string                   `protobuf:"bytes,3,opt,name=b64info,proto3" json:"b64info,omitempty"`
	Data          []byte                   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	B64Data       string                   `protobuf:"bytes,5,opt,name=b64data,proto3" json:"b64data,omitempty"`
	Override      *SubscribeOptionOverride `protobuf:"bytes,6,opt,name=override,proto3" json:"override,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeOptions) Reset() {
	*x = SubscribeOptions{}
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeOptions) ProtoMessage() {}

func (x *SubscribeOptions) ProtoReflect() protoreflect.Message {
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeOptions.ProtoReflect.Descriptor instead.
func (*SubscribeOptions) Descriptor() ([]byte, []int) {
	return file_centrifugo_proxy_v1_proxy_proto_rawDescGZIP(), []int{3}
}

func (x *SubscribeOptions) GetExpireAt() int64 {
	if x != nil {
		return x.ExpireAt
	}
	return 0
}

func (x *SubscribeOptions) GetInfo() []byte {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *SubscribeOptions) GetB64Info() string {
	if x != nil {
		return x.B64Info
	}
	return ""
}

func (x *SubscribeOptions) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SubscribeOptions) GetB64Data() string {
	if x != nil {
		return x.B64Data
	}
	return ""
}

func (x *SubscribeOptions) GetOverride() *SubscribeOptionOverride {
	if x != nil {
		return x.Override
	}
	return nil
}

type ConnectResult struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	User          string                       `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	ExpireAt      int64                        `protobuf:"varint,2,opt,name=expire_at,json=expireAt,proto3" json:"expire_at,omitempty"`
	Info          []byte                       `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`
	B64Info       string                       `protobuf:"bytes,4,opt,name=b64info,proto3" json:"b64info,omitempty"`
	Data          []byte                       `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	B64Data       string                       `protobuf:"bytes,6,opt,name=b64data,proto3" json:"b64data,omitempty"`
	Channels      []string                     `protobuf:"bytes,7,rep,name=channels,proto3" json:"channels,omitempty"`
	Subs          map[string]*SubscribeOptions `protobuf:"bytes,8,rep,name=subs,proto3" json:"subs,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Meta          []byte                       `protobuf:"bytes,9,opt,name=meta,proto3" json:"meta,omitempty"`
	Caps          []*ChannelsCapability        `protobuf:"bytes,10,rep,name=caps,proto3" json:"caps,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectResult) Reset() {
	*x = ConnectResult{}
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectResult) ProtoMessage() {}

func (x *ConnectResult) ProtoReflect() protoreflect.Message {
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectResult.ProtoReflect.Descriptor instead.
func (*ConnectResult) Descriptor() ([]byte, []int) {
	return file_centrifugo_proxy_v1_proxy_proto_rawDescGZIP(), []int{4}
}

func (x *ConnectResult) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *ConnectResult) GetExpireAt() int64 {
	if x != nil {
		return x.ExpireAt
	}
	return 0
}

func (x *ConnectResult) GetInfo() []byte {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *ConnectResult) GetB64Info() string {
	if x != nil {
		return x.B64Info
	}
	return ""
}

func (x *ConnectResult) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConnectResult) GetB64Data() string {
	if x != nil {
		return x.B64Data
	}
	return ""
}

func (x *ConnectResult) GetChannels() []string {
	if x != nil {
		return x.Channels
	}
	return nil
}

func (x *ConnectResult) GetSubs() map[string]*SubscribeOptions {
	if x != nil {
		return x.Subs
	}
	return nil
}

func (x *ConnectResult) GetMeta() []byte {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *ConnectResult) GetCaps() []*ChannelsCapability {
	if x != nil {
		return x.Caps
	}
	return nil
}

type ChannelsCapability struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Channels      []string               `protobuf:"bytes,1,rep,name=channels,proto3" json:"channels,omitempty"`
	Allow         []string               `protobuf:"bytes,2,rep,name=allow,proto3" json:"allow,omitempty"`
	Match         string                 `protobuf:"bytes,3,opt,name=match,proto3" json:"match,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChannelsCapability) Reset() {
	*x = ChannelsCapability{}
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelsCapability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelsCapability) ProtoMessage() {}

func (x *ChannelsCapability) ProtoReflect() protoreflect.Message {
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelsCapability.ProtoReflect.Descriptor instead.
func (*ChannelsCapability) Descriptor() ([]byte, []int) {
	return file_centrifugo_proxy_v1_proxy_proto_rawDescGZIP(), []int{5}
}

func (x *ChannelsCapability) GetChannels() []string {
	if x != nil {
		return x.Channels
	}
	return nil
}

func (x *ChannelsCapability) GetAllow() []string {
	if x != nil {
		return x.Allow
	}
	return nil
}

func (x *ChannelsCapability) GetMatch() string {
	if x != nil {
		return x.Match
	}
	return ""
}

type ConnectResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *ConnectResult         `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Error         *Error                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Disconnect    *Disconnect            `protobuf:"bytes,3,opt,name=disconnect,proto3" json:"disconnect,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectResponse) Reset() {
	*x = ConnectResponse{}
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectResponse) ProtoMessage() {}

func (x *ConnectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectResponse.ProtoReflect.Descriptor instead.
func (*ConnectResponse) Descriptor() ([]byte, []int) {
	return file_centrifugo_proxy_v1_proxy_proto_rawDescGZIP(), []int{6}
}

func (x *ConnectResponse) GetResult() *ConnectResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ConnectResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ConnectResponse) GetDisconnect() *Disconnect {
	if x != nil {
		return x.Disconnect
	}
	return nil
}

type RefreshRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Client        string                 `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
	Transport     string                 `protobuf:"bytes,2,opt,name=transport,proto3" json:"transport,omitempty"`
	Protocol      string                 `protobuf:"bytes,3,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Encoding      string                 `protobuf:"bytes,4,opt,name=encoding,proto3" json:"encoding,omitempty"`
	User          string                 `protobuf:"bytes,10,opt,name=user,proto3" json:"user,omitempty"`
	Meta          []byte                 `protobuf:"bytes,11,opt,name=meta,proto3" json:"meta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefreshRequest) Reset() {
	*x = RefreshRequest{}
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefreshRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshRequest) ProtoMessage() {}

func (x *RefreshRequest) ProtoReflect() protoreflect.Message {
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshRequest.ProtoReflect.Descriptor instead.
func (*RefreshRequest) Descriptor() ([]byte, []int) {
	return file_centrifugo_proxy_v1_proxy_proto_rawDescGZIP(), []int{7}
}

func (x *RefreshRequest) GetClient() string {
	if x != nil {
		return x.Client
	}
	return ""
}

func (x *RefreshRequest) GetTransport() string {
	if x != nil {
		return x.Transport
	}
	return ""
}

func (x *RefreshRequest) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *RefreshRequest) GetEncoding() string {
	if x != nil {
		return x.Encoding
	}
	return ""
}

func (x *RefreshRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *RefreshRequest) GetMeta() []byte {
	if x != nil {
		return x.Meta
	}
	return nil
}

type RefreshResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Expired       bool                   `protobuf:"varint,1,opt,name=expired,proto3" json:"expired,omitempty"`
	ExpireAt      int64                  `protobuf:"varint,2,opt,name=expire_at,json=expireAt,proto3" json:"expire_at,omitempty"`
	Info          []byte                 `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`
	B64Info       string                 `protobuf:"bytes,4,opt,name=b64info,proto3" json:"b64info,omitempty"`
	Meta          []byte                 `protobuf:"bytes,5,opt,name=meta,proto3" json:"meta,omitempty"`
	Caps          []*ChannelsCapability  `protobuf:"bytes,6,rep,name=caps,proto3" json:"caps,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefreshResult) Reset() {
	*x = RefreshResult{}
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefreshResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshResult) ProtoMessage() {}

func (x *RefreshResult) ProtoReflect() protoreflect.Message {
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshResult.ProtoReflect.Descriptor instead.
func (*RefreshResult) Descriptor() ([]byte, []int) {
	return file_centrifugo_proxy_v1_proxy_proto_rawDescGZIP(), []int{8}
}

func (x *RefreshResult) GetExpired() bool {
	if x != nil {
		return x.Expired
	}
	return false
}

func (x *RefreshResult) GetExpireAt() int64 {
	if x != nil {
		return x.ExpireAt
	}
	return 0
}

func (x *RefreshResult) GetInfo() []byte {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *RefreshResult) GetB64Info() string {
	if x != nil {
		return x.B64Info
	}
	return ""
}

func (x *RefreshResult) GetMeta() []byte {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *RefreshResult) GetCaps() []*ChannelsCapability {
	if x != nil {
		return x.Caps
	}
	return nil
}

type RefreshResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *RefreshResult         `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Error         *Error                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Disconnect    *Disconnect            `protobuf:"bytes,3,opt,name=disconnect,proto3" json:"disconnect,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefreshResponse) Reset() {
	*x = RefreshResponse{}
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefreshResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshResponse) ProtoMessage() {}

func (x *RefreshResponse) ProtoReflect() protoreflect.Message {
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshResponse.ProtoReflect.Descriptor instead.
func (*RefreshResponse) Descriptor() ([]byte, []int) {
	return file_centrifugo_proxy_v1_proxy_proto_rawDescGZIP(), []int{9}
}

func (x *RefreshResponse) GetResult() *RefreshResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *RefreshResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RefreshResponse) GetDisconnect() *Disconnect {
	if x != nil {
		return x.Disconnect
	}
	return nil
}

type SubscribeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Client        string                 `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
	Transport     string                 `protobuf:"bytes,2,opt,name=transport,proto3" json:"transport,omitempty"`
	Protocol      string                 `protobuf:"bytes,3,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Encoding      string                 `protobuf:"bytes,4,opt,name=encoding,proto3" json:"encoding,omitempty"`
	User          string                 `protobuf:"bytes,10,opt,name=user,proto3" json:"user,omitempty"`
	Channel       string                 `protobuf:"bytes,11,opt,name=channel,proto3" json:"channel,omitempty"`
	Token         string                 `protobuf:"bytes,12,opt,name=token,proto3" json:"token,omitempty"`
	Meta          []byte                 `protobuf:"bytes,13,opt,name=meta,proto3" json:"meta,omitempty"`
	Data          []byte                 `protobuf:"bytes,14,opt,name=data,proto3" json:"data,omitempty"`
	B64Data       string                 `protobuf:"bytes,15,opt,name=b64data,proto3" json:"b64data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeRequest) Reset() {
	*x = SubscribeRequest{}
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequest) ProtoMessage() {}

func (x *SubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequest.ProtoReflect.Descriptor instead.
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return file_centrifugo_proxy_v1_proxy_proto_rawDescGZIP(), []int{10}
}

func (x *SubscribeRequest) GetClient() string {
	if x != nil {
		return x.Client
	}
	return ""
}

func (x *SubscribeRequest) GetTransport() string {
	if x != nil {
		return x.Transport
	}
	return ""
}

func (x *SubscribeRequest) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *SubscribeRequest) GetEncoding() string {
	if x != nil {
		return x.Encoding
	}
	return ""
}

func (x *SubscribeRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *SubscribeRequest) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *SubscribeRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *SubscribeRequest) GetMeta() []byte {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *SubscribeRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SubscribeRequest) GetB64Data() string {
	if x != nil {
		return x.B64Data
	}
	return ""
}

type BoolValue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         bool                   `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BoolValue) Reset() {
	*x = BoolValue{}
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BoolValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoolValue) ProtoMessage() {}

func (x *BoolValue) ProtoReflect() protoreflect.Message {
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoolValue.ProtoReflect.Descriptor instead.
func (*BoolValue) Descriptor() ([]byte, []int) {
	return file_centrifugo_proxy_v1_proxy_proto_rawDescGZIP(), []int{11}
}

func (x *BoolValue) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

type Int32Value struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         int32                  `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Int32Value) Reset() {
	*x = Int32Value{}
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Int32Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Int32Value) ProtoMessage() {}

func (x *Int32Value) ProtoReflect() protoreflect.Message {
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Int32Value.ProtoReflect.Descriptor instead.
func (*Int32Value) Descriptor() ([]byte, []int) {
	return file_centrifugo_proxy_v1_proxy_proto_rawDescGZIP(), []int{12}
}

func (x *Int32Value) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type SubscribeOptionOverride struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Presence           *BoolValue             `protobuf:"bytes,1,opt,name=presence,proto3" json:"presence,omitempty"`
	JoinLeave          *BoolValue             `protobuf:"bytes,2,opt,name=join_leave,json=joinLeave,proto3" json:"join_leave,omitempty"`
	ForceRecovery      *BoolValue             `protobuf:"bytes,3,opt,name=force_recovery,json=forceRecovery,proto3" json:"force_recovery,omitempty"`
	ForcePositioning   *BoolValue             `protobuf:"bytes,4,opt,name=force_positioning,json=forcePositioning,proto3" json:"force_positioning,omitempty"`
	ForcePushJoinLeave *BoolValue             `protobuf:"bytes,5,opt,name=force_push_join_leave,json=forcePushJoinLeave,proto3" json:"force_push_join_leave,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *SubscribeOptionOverride) Reset() {
	*x = SubscribeOptionOverride{}
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeOptionOverride) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeOptionOverride) ProtoMessage() {}

func (x *SubscribeOptionOverride) ProtoReflect() protoreflect.Message {
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeOptionOverride.ProtoReflect.Descriptor instead.
func (*SubscribeOptionOverride) Descriptor() ([]byte, []int) {
	return file_centrifugo_proxy_v1_proxy_proto_rawDescGZIP(), []int{13}
}

func (x *SubscribeOptionOverride) GetPresence() *BoolValue {
	if x != nil {
		return x.Presence
	}
	return nil
}

func (x *SubscribeOptionOverride) GetJoinLeave() *BoolValue {
	if x != nil {
		return x.JoinLeave
	}
	return nil
}

func (x *SubscribeOptionOverride) GetForceRecovery() *BoolValue {
	if x != nil {
		return x.ForceRecovery
	}
	return nil
}

func (x *SubscribeOptionOverride) GetForcePositioning() *BoolValue {
	if x != nil {
		return x.ForcePositioning
	}
	return nil
}

func (x *SubscribeOptionOverride) GetForcePushJoinLeave() *BoolValue {
	if x != nil {
		return x.ForcePushJoinLeave
	}
	return nil
}

type SubscribeResult struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	ExpireAt      int64                    `protobuf:"varint,1,opt,name=expire_at,json=expireAt,proto3" json:"expire_at,omitempty"`
	Info          []byte                   `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	B64Info       string                   `protobuf:"bytes,3,opt,name=b64info,proto3" json:"b64info,omitempty"`
	Data          []byte                   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	B64Data       string                   `protobuf:"bytes,5,opt,name=b64data,proto3" json:"b64data,omitempty"`
	Override      *SubscribeOptionOverride `protobuf:"bytes,6,opt,name=override,proto3" json:"override,omitempty"`
	Allow         []string                 `protobuf:"bytes,7,rep,name=allow,proto3" json:"allow,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeResult) Reset() {
	*x = SubscribeResult{}
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeResult) ProtoMessage() {}

func (x *SubscribeResult) ProtoReflect() protoreflect.Message {
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeResult.ProtoReflect.Descriptor instead.
func (*SubscribeResult) Descriptor() ([]byte, []int) {
	return file_centrifugo_proxy_v1_proxy_proto_rawDescGZIP(), []int{14}
}

func (x *SubscribeResult) GetExpireAt() int64 {
	if x != nil {
		return x.ExpireAt
	}
	return 0
}

func (x *SubscribeResult) GetInfo() []byte {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *SubscribeResult) GetB64Info() string {
	if x != nil {
		return x.B64Info
	}
	return ""
}

func (x *SubscribeResult) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SubscribeResult) GetB64Data() string {
	if x != nil {
		return x.B64Data
	}
	return ""
}

func (x *SubscribeResult) GetOverride() *SubscribeOptionOverride {
	if x != nil {
		return x.Override
	}
	return nil
}

func (x *SubscribeResult) GetAllow() []string {
	if x != nil {
		return x.Allow
	}
	return nil
}

type SubscribeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *SubscribeResult       `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Error         *Error                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Disconnect    *Disconnect            `protobuf:"bytes,3,opt,name=disconnect,proto3" json:"disconnect,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeResponse) Reset() {
	*x = SubscribeResponse{}
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeResponse) ProtoMessage() {}

func (x *SubscribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeResponse.ProtoReflect.Descriptor instead.
func (*SubscribeResponse) Descriptor() ([]byte, []int) {
	return file_centrifugo_proxy_v1_proxy_proto_rawDescGZIP(), []int{15}
}

func (x *SubscribeResponse) GetResult() *SubscribeResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *SubscribeResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *SubscribeResponse) GetDisconnect() *Disconnect {
	if x != nil {
		return x.Disconnect
	}
	return nil
}

type PublishRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Client        string                 `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
	Transport     string                 `protobuf:"bytes,2,opt,name=transport,proto3" json:"transport,omitempty"`
	Protocol      string                 `protobuf:"bytes,3,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Encoding      string                 `protobuf:"bytes,4,opt,name=encoding,proto3" json:"encoding,omitempty"`
	User          string                 `protobuf:"bytes,10,opt,name=user,proto3" json:"user,omitempty"`
	Channel       string                 `protobuf:"bytes,11,opt,name=channel,proto3" json:"channel,omitempty"`
	Data          []byte                 `protobuf:"bytes,12,opt,name=data,proto3" json:"data,omitempty"`
	B64Data       string                 `protobuf:"bytes,13,opt,name=b64data,proto3" json:"b64data,omitempty"`
	Meta          []byte                 `protobuf:"bytes,14,opt,name=meta,proto3" json:"meta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishRequest) Reset() {
	*x = PublishRequest{}
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishRequest) ProtoMessage() {}

func (x *PublishRequest) ProtoReflect() protoreflect.Message {
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishRequest.ProtoReflect.Descriptor instead.
func (*PublishRequest) Descriptor() ([]byte, []int) {
	return file_centrifugo_proxy_v1_proxy_proto_rawDescGZIP(), []int{16}
}

func (x *PublishRequest) GetClient() string {
	if x != nil {
		return x.Client
	}
	return ""
}

func (x *PublishRequest) GetTransport() string {
	if x != nil {
		return x.Transport
	}
	return ""
}

func (x *PublishRequest) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *PublishRequest) GetEncoding() string {
	if x != nil {
		return x.Encoding
	}
	return ""
}

func (x *PublishRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *PublishRequest) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *PublishRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *PublishRequest) GetB64Data() string {
	if x != nil {
		return x.B64Data
	}
	return ""
}

func (x *PublishRequest) GetMeta() []byte {
	if x != nil {
		return x.Meta
	}
	return nil
}

type PublishResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	B64Data       string                 `protobuf:"bytes,2,opt,name=b64data,proto3" json:"b64data,omitempty"`
	SkipHistory   bool                   `protobuf:"varint,3,opt,name=skip_history,json=skipHistory,proto3" json:"skip_history,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishResult) Reset() {
	*x = PublishResult{}
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishResult) ProtoMessage() {}

func (x *PublishResult) ProtoReflect() protoreflect.Message {
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishResult.ProtoReflect.Descriptor instead.
func (*PublishResult) Descriptor() ([]byte, []int) {
	return file_centrifugo_proxy_v1_proxy_proto_rawDescGZIP(), []int{17}
}

func (x *PublishResult) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *PublishResult) GetB64Data() string {
	if x != nil {
		return x.B64Data
	}
	return ""
}

func (x *PublishResult) GetSkipHistory() bool {
	if x != nil {
		return x.SkipHistory
	}
	return false
}

type PublishResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *PublishResult         `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Error         *Error                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Disconnect    *Disconnect            `protobuf:"bytes,3,opt,name=disconnect,proto3" json:"disconnect,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishResponse) Reset() {
	*x = PublishResponse{}
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishResponse) ProtoMessage() {}

func (x *PublishResponse) ProtoReflect() protoreflect.Message {
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishResponse.ProtoReflect.Descriptor instead.
func (*PublishResponse) Descriptor() ([]byte, []int) {
	return file_centrifugo_proxy_v1_proxy_proto_rawDescGZIP(), []int{18}
}

func (x *PublishResponse) GetResult() *PublishResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *PublishResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *PublishResponse) GetDisconnect() *Disconnect {
	if x != nil {
		return x.Disconnect
	}
	return nil
}

type RPCRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Client        string                 `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
	Transport     string                 `protobuf:"bytes,2,opt,name=transport,proto3" json:"transport,omitempty"`
	Protocol      string                 `protobuf:"bytes,3,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Encoding      string                 `protobuf:"bytes,4,opt,name=encoding,proto3" json:"encoding,omitempty"`
	User          string                 `protobuf:"bytes,10,opt,name=user,proto3" json:"user,omitempty"`
	Method        string                 `protobuf:"bytes,11,opt,name=method,proto3" json:"method,omitempty"`
	Data          []byte                 `protobuf:"bytes,12,opt,name=data,proto3" json:"data,omitempty"`
	B64Data       string                 `protobuf:"bytes,13,opt,name=b64data,proto3" json:"b64data,omitempty"`
	Meta          []byte                 `protobuf:"bytes,14,opt,name=meta,proto3" json:"meta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RPCRequest) Reset() {
	*x = RPCRequest{}
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RPCRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RPCRequest) ProtoMessage() {}

func (x *RPCRequest) ProtoReflect() protoreflect.Message {
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RPCRequest.ProtoReflect.Descriptor instead.
func (*RPCRequest) Descriptor() ([]byte, []int) {
	return file_centrifugo_proxy_v1_proxy_proto_rawDescGZIP(), []int{19}
}

func (x *RPCRequest) GetClient() string {
	if x != nil {
		return x.Client
	}
	return ""
}

func (x *RPCRequest) GetTransport() string {
	if x != nil {
		return x.Transport
	}
	return ""
}

func (x *RPCRequest) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *RPCRequest) GetEncoding() string {
	if x != nil {
		return x.Encoding
	}
	return ""
}

func (x *RPCRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *RPCRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *RPCRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *RPCRequest) GetB64Data() string {
	if x != nil {
		return x.B64Data
	}
	return ""
}

func (x *RPCRequest) GetMeta() []byte {
	if x != nil {
		return x.Meta
	}
	return nil
}

type RPCResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	B64Data       string                 `protobuf:"bytes,2,opt,name=b64data,proto3" json:"b64data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RPCResult) Reset() {
	*x = RPCResult{}
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RPCResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RPCResult) ProtoMessage() {}

func (x *RPCResult) ProtoReflect() protoreflect.Message {
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RPCResult.ProtoReflect.Descriptor instead.
func (*RPCResult) Descriptor() ([]byte, []int) {
	return file_centrifugo_proxy_v1_proxy_proto_rawDescGZIP(), []int{20}
}

func (x *RPCResult) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *RPCResult) GetB64Data() string {
	if x != nil {
		return x.B64Data
	}
	return ""
}

type RPCResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *RPCResult             `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Error         *Error                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Disconnect    *Disconnect            `protobuf:"bytes,3,opt,name=disconnect,proto3" json:"disconnect,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RPCResponse) Reset() {
	*x = RPCResponse{}
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RPCResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RPCResponse) ProtoMessage() {}

func (x *RPCResponse) ProtoReflect() protoreflect.Message {
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RPCResponse.ProtoReflect.Descriptor instead.
func (*RPCResponse) Descriptor() ([]byte, []int) {
	return file_centrifugo_proxy_v1_proxy_proto_rawDescGZIP(), []int{21}
}

func (x *RPCResponse) GetResult() *RPCResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *RPCResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RPCResponse) GetDisconnect() *Disconnect {
	if x != nil {
		return x.Disconnect
	}
	return nil
}

type SubRefreshRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Client        string                 `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
	Transport     string                 `protobuf:"bytes,2,opt,name=transport,proto3" json:"transport,omitempty"`
	Protocol      string                 `protobuf:"bytes,3,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Encoding      string                 `protobuf:"bytes,4,opt,name=encoding,proto3" json:"encoding,omitempty"`
	User          string                 `protobuf:"bytes,10,opt,name=user,proto3" json:"user,omitempty"`
	Channel       string                 `protobuf:"bytes,11,opt,name=channel,proto3" json:"channel,omitempty"`
	Meta          []byte                 `protobuf:"bytes,12,opt,name=meta,proto3" json:"meta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubRefreshRequest) Reset() {
	*x = SubRefreshRequest{}
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubRefreshRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubRefreshRequest) ProtoMessage() {}

func (x *SubRefreshRequest) ProtoReflect() protoreflect.Message {
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubRefreshRequest.ProtoReflect.Descriptor instead.
func (*SubRefreshRequest) Descriptor() ([]byte, []int) {
	return file_centrifugo_proxy_v1_proxy_proto_rawDescGZIP(), []int{22}
}

func (x *SubRefreshRequest) GetClient() string {
	if x != nil {
		return x.Client
	}
	return ""
}

func (x *SubRefreshRequest) GetTransport() string {
	if x != nil {
		return x.Transport
	}
	return ""
}

func (x *SubRefreshRequest) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *SubRefreshRequest) GetEncoding() string {
	if x != nil {
		return x.Encoding
	}
	return ""
}

func (x *SubRefreshRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *SubRefreshRequest) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *SubRefreshRequest) GetMeta() []byte {
	if x != nil {
		return x.Meta
	}
	return nil
}

type SubRefreshResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Expired       bool                   `protobuf:"varint,1,opt,name=expired,proto3" json:"expired,omitempty"`
	ExpireAt      int64                  `protobuf:"varint,2,opt,name=expire_at,json=expireAt,proto3" json:"expire_at,omitempty"`
	Info          []byte                 `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`
	B64Info       string                 `protobuf:"bytes,4,opt,name=b64info,proto3" json:"b64info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubRefreshResult) Reset() {
	*x = SubRefreshResult{}
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubRefreshResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubRefreshResult) ProtoMessage() {}

func (x *SubRefreshResult) ProtoReflect() protoreflect.Message {
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubRefreshResult.ProtoReflect.Descriptor instead.
func (*SubRefreshResult) Descriptor() ([]byte, []int) {
	return file_centrifugo_proxy_v1_proxy_proto_rawDescGZIP(), []int{23}
}

func (x *SubRefreshResult) GetExpired() bool {
	if x != nil {
		return x.Expired
	}
	return false
}

func (x *SubRefreshResult) GetExpireAt() int64 {
	if x != nil {
		return x.ExpireAt
	}
	return 0
}

func (x *SubRefreshResult) GetInfo() []byte {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *SubRefreshResult) GetB64Info() string {
	if x != nil {
		return x.B64Info
	}
	return ""
}

type SubRefreshResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *SubRefreshResult      `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Error         *Error                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Disconnect    *Disconnect            `protobuf:"bytes,3,opt,name=disconnect,proto3" json:"disconnect,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubRefreshResponse) Reset() {
	*x = SubRefreshResponse{}
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubRefreshResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubRefreshResponse) ProtoMessage() {}

func (x *SubRefreshResponse) ProtoReflect() protoreflect.Message {
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubRefreshResponse.ProtoReflect.Descriptor instead.
func (*SubRefreshResponse) Descriptor() ([]byte, []int) {
	return file_centrifugo_proxy_v1_proxy_proto_rawDescGZIP(), []int{24}
}

func (x *SubRefreshResponse) GetResult() *SubRefreshResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *SubRefreshResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *SubRefreshResponse) GetDisconnect() *Disconnect {
	if x != nil {
		return x.Disconnect
	}
	return nil
}

// Publication is an event to be sent to a client.
// We intentionally make it use the same Protobuf numbers for fields as our client protocol
// Publication - for now only for consistency.
type Publication struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Tags          map[string]string      `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Publication) Reset() {
	*x = Publication{}
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Publication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Publication) ProtoMessage() {}

func (x *Publication) ProtoReflect() protoreflect.Message {
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Publication.ProtoReflect.Descriptor instead.
func (*Publication) Descriptor() ([]byte, []int) {
	return file_centrifugo_proxy_v1_proxy_proto_rawDescGZIP(), []int{25}
}

func (x *Publication) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Publication) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type StreamSubscribeRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Centrifugo always sends this within the first message upon user subscription request.
	// It's always not set in the following StreamRequest messages from Centrifugo.
	SubscribeRequest *SubscribeRequest `protobuf:"bytes,1,opt,name=subscribe_request,json=subscribeRequest,proto3" json:"subscribe_request,omitempty"`
	// Publication may be set when client publishes to the on-demand stream. If you are using
	// bidirectional stream then Centrifugo assumes publications from client-side are allowed.
	Publication   *Publication `protobuf:"bytes,2,opt,name=publication,proto3" json:"publication,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamSubscribeRequest) Reset() {
	*x = StreamSubscribeRequest{}
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamSubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamSubscribeRequest) ProtoMessage() {}

func (x *StreamSubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamSubscribeRequest.ProtoReflect.Descriptor instead.
func (*StreamSubscribeRequest) Descriptor() ([]byte, []int) {
	return file_centrifugo_proxy_v1_proxy_proto_rawDescGZIP(), []int{26}
}

func (x *StreamSubscribeRequest) GetSubscribeRequest() *SubscribeRequest {
	if x != nil {
		return x.SubscribeRequest
	}
	return nil
}

func (x *StreamSubscribeRequest) GetPublication() *Publication {
	if x != nil {
		return x.Publication
	}
	return nil
}

type StreamSubscribeResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// SubscribeResponse may optionally be set in the first message from backend to Centrifugo.
	SubscribeResponse *SubscribeResponse `protobuf:"bytes,1,opt,name=subscribe_response,json=subscribeResponse,proto3" json:"subscribe_response,omitempty"`
	// Publication goes to client. Can't be set in the first message from backend to Centrifugo.
	Publication   *Publication `protobuf:"bytes,2,opt,name=publication,proto3" json:"publication,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamSubscribeResponse) Reset() {
	*x = StreamSubscribeResponse{}
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamSubscribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamSubscribeResponse) ProtoMessage() {}

func (x *StreamSubscribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamSubscribeResponse.ProtoReflect.Descriptor instead.
func (*StreamSubscribeResponse) Descriptor() ([]byte, []int) {
	return file_centrifugo_proxy_v1_proxy_proto_rawDescGZIP(), []int{27}
}

func (x *StreamSubscribeResponse) GetSubscribeResponse() *SubscribeResponse {
	if x != nil {
		return x.SubscribeResponse
	}
	return nil
}

func (x *StreamSubscribeResponse) GetPublication() *Publication {
	if x != nil {
		return x.Publication
	}
	return nil
}

type NotifyChannelStateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Events        []*ChannelEvent        `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotifyChannelStateRequest) Reset() {
	*x = NotifyChannelStateRequest{}
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotifyChannelStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyChannelStateRequest) ProtoMessage() {}

func (x *NotifyChannelStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyChannelStateRequest.ProtoReflect.Descriptor instead.
func (*NotifyChannelStateRequest) Descriptor() ([]byte, []int) {
	return file_centrifugo_proxy_v1_proxy_proto_rawDescGZIP(), []int{28}
}

func (x *NotifyChannelStateRequest) GetEvents() []*ChannelEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type ChannelEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TimeMs        int64                  `protobuf:"varint,1,opt,name=time_ms,json=timeMs,proto3" json:"time_ms,omitempty"`
	Channel       string                 `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"` // "occupied" | "vacated" | could be more in the future. Not using enums for better JSON interop.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChannelEvent) Reset() {
	*x = ChannelEvent{}
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelEvent) ProtoMessage() {}

func (x *ChannelEvent) ProtoReflect() protoreflect.Message {
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelEvent.ProtoReflect.Descriptor instead.
func (*ChannelEvent) Descriptor() ([]byte, []int) {
	return file_centrifugo_proxy_v1_proxy_proto_rawDescGZIP(), []int{29}
}

func (x *ChannelEvent) GetTimeMs() int64 {
	if x != nil {
		return x.TimeMs
	}
	return 0
}

func (x *ChannelEvent) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *ChannelEvent) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type NotifyChannelStateResponse struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Result        *NotifyChannelStateResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Error         *Error                    `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotifyChannelStateResponse) Reset() {
	*x = NotifyChannelStateResponse{}
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotifyChannelStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyChannelStateResponse) ProtoMessage() {}

func (x *NotifyChannelStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyChannelStateResponse.ProtoReflect.Descriptor instead.
func (*NotifyChannelStateResponse) Descriptor() ([]byte, []int) {
	return file_centrifugo_proxy_v1_proxy_proto_rawDescGZIP(), []int{30}
}

func (x *NotifyChannelStateResponse) GetResult() *NotifyChannelStateResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *NotifyChannelStateResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type NotifyChannelStateResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotifyChannelStateResult) Reset() {
	*x = NotifyChannelStateResult{}
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotifyChannelStateResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyChannelStateResult) ProtoMessage() {}

func (x *NotifyChannelStateResult) ProtoReflect() protoreflect.Message {
	mi := &file_centrifugo_proxy_v1_proxy_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyChannelStateResult.ProtoReflect.Descriptor instead.
func (*NotifyChannelStateResult) Descriptor() ([]byte, []int) {
	return file_centrifugo_proxy_v1_proxy_proto_rawDescGZIP(), []int{31}
}

var File_centrifugo_proxy_v1_proxy_proto protoreflect.FileDescriptor

const file_centrifugo_proxy_v1_proxy_proto_rawDesc = "" +
	"\n" +
	"\x1fcentrifugo/proxy/v1/proxy.proto\x12\x1ccentrifugal.centrifugo.proxy\">\n" +
	"\n" +
	"Disconnect\x12\x12\n" +
	"\x04code\x18\x01 \x01(\rR\x04code\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reasonJ\x04\b\x03\x10\x04\"S\n" +
	"\x05Error\x12\x12\n" +
	"\x04code\x18\x01 \x01(\rR\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1c\n" +
	"\ttemporary\x18\x03 \x01(\bR\ttemporary\"\xf6\x01\n" +
	"\x0eConnectRequest\x12\x16\n" +
	"\x06client\x18\x01 \x01(\tR\x06client\x12\x1c\n" +
	"\ttransport\x18\x02 \x01(\tR\ttransport\x12\x1a\n" +
	"\bprotocol\x18\x03 \x01(\tR\bprotocol\x12\x1a\n" +
	"\bencoding\x18\x04 \x01(\tR\bencoding\x12\x12\n" +
	"\x04data\x18\n" +
	" \x01(\fR\x04data\x12\x18\n" +
	"\ab64data\x18\v \x01(\tR\ab64data\x12\x12\n" +
	"\x04name\x18\f \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\r \x01(\tR\aversion\x12\x1a\n" +
	"\bchannels\x18\x0e \x03(\tR\bchannels\"\xde\x01\n" +
	"\x10SubscribeOptions\x12\x1b\n" +
	"\texpire_at\x18\x01 \x01(\x03R\bexpireAt\x12\x12\n" +
	"\x04info\x18\x02 \x01(\fR\x04info\x12\x18\n" +
	"\ab64info\x18\x03 \x01(\tR\ab64info\x12\x12\n" +
	"\x04data\x18\x04 \x01(\fR\x04data\x12\x18\n" +
	"\ab64data\x18\x05 \x01(\tR\ab64data\x12Q\n" +
	"\boverride\x18\x06 \x01(\v25.centrifugal.centrifugo.proxy.SubscribeOptionOverrideR\boverride\"\xc6\x03\n" +
	"\rConnectResult\x12\x12\n" +
	"\x04user\x18\x01 \x01(\tR\x04user\x12\x1b\n" +
	"\texpire_at\x18\x02 \x01(\x03R\bexpireAt\x12\x12\n" +
	"\x04info\x18\x03 \x01(\fR\x04info\x12\x18\n" +
	"\ab64info\x18\x04 \x01(\tR\ab64info\x12\x12\n" +
	"\x04data\x18\x05 \x01(\fR\x04data\x12\x18\n" +
	"\ab64data\x18\x06 \x01(\tR\ab64data\x12\x1a\n" +
	"\bchannels\x18\a \x03(\tR\bchannels\x12I\n" +
	"\x04subs\x18\b \x03(\v25.centrifugal.centrifugo.proxy.ConnectResult.SubsEntryR\x04subs\x12\x12\n" +
	"\x04meta\x18\t \x01(\fR\x04meta\x12D\n" +
	"\x04caps\x18\n" +
	" \x03(\v20.centrifugal.centrifugo.proxy.ChannelsCapabilityR\x04caps\x1ag\n" +
	"\tSubsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12D\n" +
	"\x05value\x18\x02 \x01(\v2..centrifugal.centrifugo.proxy.SubscribeOptionsR\x05value:\x028\x01\"\\\n" +
	"\x12ChannelsCapability\x12\x1a\n" +
	"\bchannels\x18\x01 \x03(\tR\bchannels\x12\x14\n" +
	"\x05allow\x18\x02 \x03(\tR\x05allow\x12\x14\n" +
	"\x05match\x18\x03 \x01(\tR\x05match\"\xdb\x01\n" +
	"\x0fConnectResponse\x12C\n" +
	"\x06result\x18\x01 \x01(\v2+.centrifugal.centrifugo.proxy.ConnectResultR\x06result\x129\n" +
	"\x05error\x18\x02 \x01(\v2#.centrifugal.centrifugo.proxy.ErrorR\x05error\x12H\n" +
	"\n" +
	"disconnect\x18\x03 \x01(\v2(.centrifugal.centrifugo.proxy.DisconnectR\n" +
	"disconnect\"\xa6\x01\n" +
	"\x0eRefreshRequest\x12\x16\n" +
	"\x06client\x18\x01 \x01(\tR\x06client\x12\x1c\n" +
	"\ttransport\x18\x02 \x01(\tR\ttransport\x12\x1a\n" +
	"\bprotocol\x18\x03 \x01(\tR\bprotocol\x12\x1a\n" +
	"\bencoding\x18\x04 \x01(\tR\bencoding\x12\x12\n" +
	"\x04user\x18\n" +
	" \x01(\tR\x04user\x12\x12\n" +
	"\x04meta\x18\v \x01(\fR\x04meta\"\xce\x01\n" +
	"\rRefreshResult\x12\x18\n" +
	"\aexpired\x18\x01 \x01(\bR\aexpired\x12\x1b\n" +
	"\texpire_at\x18\x02 \x01(\x03R\bexpireAt\x12\x12\n" +
	"\x04info\x18\x03 \x01(\fR\x04info\x12\x18\n" +
	"\ab64info\x18\x04 \x01(\tR\ab64info\x12\x12\n" +
	"\x04meta\x18\x05 \x01(\fR\x04meta\x12D\n" +
	"\x04caps\x18\x06 \x03(\v20.centrifugal.centrifugo.proxy.ChannelsCapabilityR\x04caps\"\xdb\x01\n" +
	"\x0fRefreshResponse\x12C\n" +
	"\x06result\x18\x01 \x01(\v2+.centrifugal.centrifugo.proxy.RefreshResultR\x06result\x129\n" +
	"\x05error\x18\x02 \x01(\v2#.centrifugal.centrifugo.proxy.ErrorR\x05error\x12H\n" +
	"\n" +
	"disconnect\x18\x03 \x01(\v2(.centrifugal.centrifugo.proxy.DisconnectR\n" +
	"disconnect\"\x86\x02\n" +
	"\x10SubscribeRequest\x12\x16\n" +
	"\x06client\x18\x01 \x01(\tR\x06client\x12\x1c\n" +
	"\ttransport\x18\x02 \x01(\tR\ttransport\x12\x1a\n" +
	"\bprotocol\x18\x03 \x01(\tR\bprotocol\x12\x1a\n" +
	"\bencoding\x18\x04 \x01(\tR\bencoding\x12\x12\n" +
	"\x04user\x18\n" +
	" \x01(\tR\x04user\x12\x18\n" +
	"\achannel\x18\v \x01(\tR\achannel\x12\x14\n" +
	"\x05token\x18\f \x01(\tR\x05token\x12\x12\n" +
	"\x04meta\x18\r \x01(\fR\x04meta\x12\x12\n" +
	"\x04data\x18\x0e \x01(\fR\x04data\x12\x18\n" +
	"\ab64data\x18\x0f \x01(\tR\ab64data\"!\n" +
	"\tBoolValue\x12\x14\n" +
	"\x05value\x18\x01 \x01(\bR\x05value\"\"\n" +
	"\n" +
	"Int32Value\x12\x14\n" +
	"\x05value\x18\x01 \x01(\x05R\x05value\"\xa8\x03\n" +
	"\x17SubscribeOptionOverride\x12C\n" +
	"\bpresence\x18\x01 \x01(\v2'.centrifugal.centrifugo.proxy.BoolValueR\bpresence\x12F\n" +
	"\n" +
	"join_leave\x18\x02 \x01(\v2'.centrifugal.centrifugo.proxy.BoolValueR\tjoinLeave\x12N\n" +
	"\x0eforce_recovery\x18\x03 \x01(\v2'.centrifugal.centrifugo.proxy.BoolValueR\rforceRecovery\x12T\n" +
	"\x11force_positioning\x18\x04 \x01(\v2'.centrifugal.centrifugo.proxy.BoolValueR\x10forcePositioning\x12Z\n" +
	"\x15force_push_join_leave\x18\x05 \x01(\v2'.centrifugal.centrifugo.proxy.BoolValueR\x12forcePushJoinLeave\"\xf3\x01\n" +
	"\x0fSubscribeResult\x12\x1b\n" +
	"\texpire_at\x18\x01 \x01(\x03R\bexpireAt\x12\x12\n" +
	"\x04info\x18\x02 \x01(\fR\x04info\x12\x18\n" +
	"\ab64info\x18\x03 \x01(\tR\ab64info\x12\x12\n" +
	"\x04data\x18\x04 \x01(\fR\x04data\x12\x18\n" +
	"\ab64data\x18\x05 \x01(\tR\ab64data\x12Q\n" +
	"\boverride\x18\x06 \x01(\v25.centrifugal.centrifugo.proxy.SubscribeOptionOverrideR\boverride\x12\x14\n" +
	"\x05allow\x18\a \x03(\tR\x05allow\"\xdf\x01\n" +
	"\x11SubscribeResponse\x12E\n" +
	"\x06result\x18\x01 \x01(\v2-.centrifugal.centrifugo.proxy.SubscribeResultR\x06result\x129\n" +
	"\x05error\x18\x02 \x01(\v2#.centrifugal.centrifugo.proxy.ErrorR\x05error\x12H\n" +
	"\n" +
	"disconnect\x18\x03 \x01(\v2(.centrifugal.centrifugo.proxy.DisconnectR\n" +
	"disconnect\"\xee\x01\n" +
	"\x0ePublishRequest\x12\x16\n" +
	"\x06client\x18\x01 \x01(\tR\x06client\x12\x1c\n" +
	"\ttransport\x18\x02 \x01(\tR\ttransport\x12\x1a\n" +
	"\bprotocol\x18\x03 \x01(\tR\bprotocol\x12\x1a\n" +
	"\bencoding\x18\x04 \x01(\tR\bencoding\x12\x12\n" +
	"\x04user\x18\n" +
	" \x01(\tR\x04user\x12\x18\n" +
	"\achannel\x18\v \x01(\tR\achannel\x12\x12\n" +
	"\x04data\x18\f \x01(\fR\x04data\x12\x18\n" +
	"\ab64data\x18\r \x01(\tR\ab64data\x12\x12\n" +
	"\x04meta\x18\x0e \x01(\fR\x04meta\"`\n" +
	"\rPublishResult\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\x12\x18\n" +
	"\ab64data\x18\x02 \x01(\tR\ab64data\x12!\n" +
	"\fskip_history\x18\x03 \x01(\bR\vskipHistory\"\xdb\x01\n" +
	"\x0fPublishResponse\x12C\n" +
	"\x06result\x18\x01 \x01(\v2+.centrifugal.centrifugo.proxy.PublishResultR\x06result\x129\n" +
	"\x05error\x18\x02 \x01(\v2#.centrifugal.centrifugo.proxy.ErrorR\x05error\x12H\n" +
	"\n" +
	"disconnect\x18\x03 \x01(\v2(.centrifugal.centrifugo.proxy.DisconnectR\n" +
	"disconnect\"\xe8\x01\n" +
	"\n" +
	"RPCRequest\x12\x16\n" +
	"\x06client\x18\x01 \x01(\tR\x06client\x12\x1c\n" +
	"\ttransport\x18\x02 \x01(\tR\ttransport\x12\x1a\n" +
	"\bprotocol\x18\x03 \x01(\tR\bprotocol\x12\x1a\n" +
	"\bencoding\x18\x04 \x01(\tR\bencoding\x12\x12\n" +
	"\x04user\x18\n" +
	" \x01(\tR\x04user\x12\x16\n" +
	"\x06method\x18\v \x01(\tR\x06method\x12\x12\n" +
	"\x04data\x18\f \x01(\fR\x04data\x12\x18\n" +
	"\ab64data\x18\r \x01(\tR\ab64data\x12\x12\n" +
	"\x04meta\x18\x0e \x01(\fR\x04meta\"9\n" +
	"\tRPCResult\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\x12\x18\n" +
	"\ab64data\x18\x02 \x01(\tR\ab64data\"\xd3\x01\n" +
	"\vRPCResponse\x12?\n" +
	"\x06result\x18\x01 \x01(\v2'.centrifugal.centrifugo.proxy.RPCResultR\x06result\x129\n" +
	"\x05error\x18\x02 \x01(\v2#.centrifugal.centrifugo.proxy.ErrorR\x05error\x12H\n" +
	"\n" +
	"disconnect\x18\x03 \x01(\v2(.centrifugal.centrifugo.proxy.DisconnectR\n" +
	"disconnect\"\xc3\x01\n" +
	"\x11SubRefreshRequest\x12\x16\n" +
	"\x06client\x18\x01 \x01(\tR\x06client\x12\x1c\n" +
	"\ttransport\x18\x02 \x01(\tR\ttransport\x12\x1a\n" +
	"\bprotocol\x18\x03 \x01(\tR\bprotocol\x12\x1a\n" +
	"\bencoding\x18\x04 \x01(\tR\bencoding\x12\x12\n" +
	"\x04user\x18\n" +
	" \x01(\tR\x04user\x12\x18\n" +
	"\achannel\x18\v \x01(\tR\achannel\x12\x12\n" +
	"\x04meta\x18\f \x01(\fR\x04meta\"w\n" +
	"\x10SubRefreshResult\x12\x18\n" +
	"\aexpired\x18\x01 \x01(\bR\aexpired\x12\x1b\n" +
	"\texpire_at\x18\x02 \x01(\x03R\bexpireAt\x12\x12\n" +
	"\x04info\x18\x03 \x01(\fR\x04info\x12\x18\n" +
	"\ab64info\x18\x04 \x01(\tR\ab64info\"\xe1\x01\n" +
	"\x12SubRefreshResponse\x12F\n" +
	"\x06result\x18\x01 \x01(\v2..centrifugal.centrifugo.proxy.SubRefreshResultR\x06result\x129\n" +
	"\x05error\x18\x02 \x01(\v2#.centrifugal.centrifugo.proxy.ErrorR\x05error\x12H\n" +
	"\n" +
	"disconnect\x18\x03 \x01(\v2(.centrifugal.centrifugo.proxy.DisconnectR\n" +
	"disconnect\"\xc1\x01\n" +
	"\vPublication\x12\x12\n" +
	"\x04data\x18\x04 \x01(\fR\x04data\x12G\n" +
	"\x04tags\x18\a \x03(\v23.centrifugal.centrifugo.proxy.Publication.TagsEntryR\x04tags\x1a7\n" +
	"\tTagsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01J\x04\b\x01\x10\x02J\x04\b\x02\x10\x03J\x04\b\x03\x10\x04J\x04\b\x05\x10\x06J\x04\b\x06\x10\a\"\xc2\x01\n" +
	"\x16StreamSubscribeRequest\x12[\n" +
	"\x11subscribe_request\x18\x01 \x01(\v2..centrifugal.centrifugo.proxy.SubscribeRequestR\x10subscribeRequest\x12K\n" +
	"\vpublication\x18\x02 \x01(\v2).centrifugal.centrifugo.proxy.PublicationR\vpublication\"\xc6\x01\n" +
	"\x17StreamSubscribeResponse\x12^\n" +
	"\x12subscribe_response\x18\x01 \x01(\v2/.centrifugal.centrifugo.proxy.SubscribeResponseR\x11subscribeResponse\x12K\n" +
	"\vpublication\x18\x02 \x01(\v2).centrifugal.centrifugo.proxy.PublicationR\vpublication\"_\n" +
	"\x19NotifyChannelStateRequest\x12B\n" +
	"\x06events\x18\x01 \x03(\v2*.centrifugal.centrifugo.proxy.ChannelEventR\x06events\"U\n" +
	"\fChannelEvent\x12\x17\n" +
	"\atime_ms\x18\x01 \x01(\x03R\x06timeMs\x12\x18\n" +
	"\achannel\x18\x02 \x01(\tR\achannel\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\"\xa7\x01\n" +
	"\x1aNotifyChannelStateResponse\x12N\n" +
	"\x06result\x18\x01 \x01(\v26.centrifugal.centrifugo.proxy.NotifyChannelStateResultR\x06result\x129\n" +
	"\x05error\x18\x02 \x01(\v2#.centrifugal.centrifugo.proxy.ErrorR\x05error\"\x1a\n" +
	"\x18NotifyChannelStateResult2\x9f\b\n" +
	"\x0fCentrifugoProxy\x12f\n" +
	"\aConnect\x12,.centrifugal.centrifugo.proxy.ConnectRequest\x1a-.centrifugal.centrifugo.proxy.ConnectResponse\x12f\n" +
	"\aRefresh\x12,.centrifugal.centrifugo.proxy.RefreshRequest\x1a-.centrifugal.centrifugo.proxy.RefreshResponse\x12l\n" +
	"\tSubscribe\x12..centrifugal.centrifugo.proxy.SubscribeRequest\x1a/.centrifugal.centrifugo.proxy.SubscribeResponse\x12f\n" +
	"\aPublish\x12,.centrifugal.centrifugo.proxy.PublishRequest\x1a-.centrifugal.centrifugo.proxy.PublishResponse\x12Z\n" +
	"\x03RPC\x12(.centrifugal.centrifugo.proxy.RPCRequest\x1a).centrifugal.centrifugo.proxy.RPCResponse\x12o\n" +
	"\n" +
	"SubRefresh\x12/.centrifugal.centrifugo.proxy.SubRefreshRequest\x1a0.centrifugal.centrifugo.proxy.SubRefreshResponse\x12\x82\x01\n" +
	"\x17SubscribeUnidirectional\x12..centrifugal.centrifugo.proxy.SubscribeRequest\x1a5.centrifugal.centrifugo.proxy.StreamSubscribeResponse0\x01\x12\x89\x01\n" +
	"\x16SubscribeBidirectional\x124.centrifugal.centrifugo.proxy.StreamSubscribeRequest\x1a5.centrifugal.centrifugo.proxy.StreamSubscribeResponse(\x010\x01\x12\x87\x01\n" +
	"\x12NotifyChannelState\x127.centrifugal.centrifugo.proxy.NotifyChannelStateRequest\x1a8.centrifugal.centrifugo.proxy.NotifyChannelStateResponseBmZ\x13centrifugo/proxy/v1\xca\x02#RoadRunner\\Centrifugal\\Proxy\\DTO\\V1\xe2\x02/RoadRunner\\Centrifugal\\Proxy\\DTO\\V1\\GPBMetadatab\x06proto3"

var (
	file_centrifugo_proxy_v1_proxy_proto_rawDescOnce sync.Once
	file_centrifugo_proxy_v1_proxy_proto_rawDescData []byte
)

func file_centrifugo_proxy_v1_proxy_proto_rawDescGZIP() []byte {
	file_centrifugo_proxy_v1_proxy_proto_rawDescOnce.Do(func() {
		file_centrifugo_proxy_v1_proxy_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_centrifugo_proxy_v1_proxy_proto_rawDesc), len(file_centrifugo_proxy_v1_proxy_proto_rawDesc)))
	})
	return file_centrifugo_proxy_v1_proxy_proto_rawDescData
}

var file_centrifugo_proxy_v1_proxy_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_centrifugo_proxy_v1_proxy_proto_goTypes = []any{
	(*Disconnect)(nil),                 // 0: centrifugal.centrifugo.proxy.Disconnect
	(*Error)(nil),                      // 1: centrifugal.centrifugo.proxy.Error
	(*ConnectRequest)(nil),             // 2: centrifugal.centrifugo.proxy.ConnectRequest
	(*SubscribeOptions)(nil),           // 3: centrifugal.centrifugo.proxy.SubscribeOptions
	(*ConnectResult)(nil),              // 4: centrifugal.centrifugo.proxy.ConnectResult
	(*ChannelsCapability)(nil),         // 5: centrifugal.centrifugo.proxy.ChannelsCapability
	(*ConnectResponse)(nil),            // 6: centrifugal.centrifugo.proxy.ConnectResponse
	(*RefreshRequest)(nil),             // 7: centrifugal.centrifugo.proxy.RefreshRequest
	(*RefreshResult)(nil),              // 8: centrifugal.centrifugo.proxy.RefreshResult
	(*RefreshResponse)(nil),            // 9: centrifugal.centrifugo.proxy.RefreshResponse
	(*SubscribeRequest)(nil),           // 10: centrifugal.centrifugo.proxy.SubscribeRequest
	(*BoolValue)(nil),                  // 11: centrifugal.centrifugo.proxy.BoolValue
	(*Int32Value)(nil),                 // 12: centrifugal.centrifugo.proxy.Int32Value
	(*SubscribeOptionOverride)(nil),    // 13: centrifugal.centrifugo.proxy.SubscribeOptionOverride
	(*SubscribeResult)(nil),            // 14: centrifugal.centrifugo.proxy.SubscribeResult
	(*SubscribeResponse)(nil),          // 15: centrifugal.centrifugo.proxy.SubscribeResponse
	(*PublishRequest)(nil),             // 16: centrifugal.centrifugo.proxy.PublishRequest
	(*PublishResult)(nil),              // 17: centrifugal.centrifugo.proxy.PublishResult
	(*PublishResponse)(nil),            // 18: centrifugal.centrifugo.proxy.PublishResponse
	(*RPCRequest)(nil),                 // 19: centrifugal.centrifugo.proxy.RPCRequest
	(*RPCResult)(nil),                  // 20: centrifugal.centrifugo.proxy.RPCResult
	(*RPCResponse)(nil),                // 21: centrifugal.centrifugo.proxy.RPCResponse
	(*SubRefreshRequest)(nil),          // 22: centrifugal.centrifugo.proxy.SubRefreshRequest
	(*SubRefreshResult)(nil),           // 23: centrifugal.centrifugo.proxy.SubRefreshResult
	(*SubRefreshResponse)(nil),         // 24: centrifugal.centrifugo.proxy.SubRefreshResponse
	(*Publication)(nil),                // 25: centrifugal.centrifugo.proxy.Publication
	(*StreamSubscribeRequest)(nil),     // 26: centrifugal.centrifugo.proxy.StreamSubscribeRequest
	(*StreamSubscribeResponse)(nil),    // 27: centrifugal.centrifugo.proxy.StreamSubscribeResponse
	(*NotifyChannelStateRequest)(nil),  // 28: centrifugal.centrifugo.proxy.NotifyChannelStateRequest
	(*ChannelEvent)(nil),               // 29: centrifugal.centrifugo.proxy.ChannelEvent
	(*NotifyChannelStateResponse)(nil), // 30: centrifugal.centrifugo.proxy.NotifyChannelStateResponse
	(*NotifyChannelStateResult)(nil),   // 31: centrifugal.centrifugo.proxy.NotifyChannelStateResult
	nil,                                // 32: centrifugal.centrifugo.proxy.ConnectResult.SubsEntry
	nil,                                // 33: centrifugal.centrifugo.proxy.Publication.TagsEntry
}
var file_centrifugo_proxy_v1_proxy_proto_depIdxs = []int32{
	13, // 0: centrifugal.centrifugo.proxy.SubscribeOptions.override:type_name -> centrifugal.centrifugo.proxy.SubscribeOptionOverride
	32, // 1: centrifugal.centrifugo.proxy.ConnectResult.subs:type_name -> centrifugal.centrifugo.proxy.ConnectResult.SubsEntry
	5,  // 2: centrifugal.centrifugo.proxy.ConnectResult.caps:type_name -> centrifugal.centrifugo.proxy.ChannelsCapability
	4,  // 3: centrifugal.centrifugo.proxy.ConnectResponse.result:type_name -> centrifugal.centrifugo.proxy.ConnectResult
	1,  // 4: centrifugal.centrifugo.proxy.ConnectResponse.error:type_name -> centrifugal.centrifugo.proxy.Error
	0,  // 5: centrifugal.centrifugo.proxy.ConnectResponse.disconnect:type_name -> centrifugal.centrifugo.proxy.Disconnect
	5,  // 6: centrifugal.centrifugo.proxy.RefreshResult.caps:type_name -> centrifugal.centrifugo.proxy.ChannelsCapability
	8,  // 7: centrifugal.centrifugo.proxy.RefreshResponse.result:type_name -> centrifugal.centrifugo.proxy.RefreshResult
	1,  // 8: centrifugal.centrifugo.proxy.RefreshResponse.error:type_name -> centrifugal.centrifugo.proxy.Error
	0,  // 9: centrifugal.centrifugo.proxy.RefreshResponse.disconnect:type_name -> centrifugal.centrifugo.proxy.Disconnect
	11, // 10: centrifugal.centrifugo.proxy.SubscribeOptionOverride.presence:type_name -> centrifugal.centrifugo.proxy.BoolValue
	11, // 11: centrifugal.centrifugo.proxy.SubscribeOptionOverride.join_leave:type_name -> centrifugal.centrifugo.proxy.BoolValue
	11, // 12: centrifugal.centrifugo.proxy.SubscribeOptionOverride.force_recovery:type_name -> centrifugal.centrifugo.proxy.BoolValue
	11, // 13: centrifugal.centrifugo.proxy.SubscribeOptionOverride.force_positioning:type_name -> centrifugal.centrifugo.proxy.BoolValue
	11, // 14: centrifugal.centrifugo.proxy.SubscribeOptionOverride.force_push_join_leave:type_name -> centrifugal.centrifugo.proxy.BoolValue
	13, // 15: centrifugal.centrifugo.proxy.SubscribeResult.override:type_name -> centrifugal.centrifugo.proxy.SubscribeOptionOverride
	14, // 16: centrifugal.centrifugo.proxy.SubscribeResponse.result:type_name -> centrifugal.centrifugo.proxy.SubscribeResult
	1,  // 17: centrifugal.centrifugo.proxy.SubscribeResponse.error:type_name -> centrifugal.centrifugo.proxy.Error
	0,  // 18: centrifugal.centrifugo.proxy.SubscribeResponse.disconnect:type_name -> centrifugal.centrifugo.proxy.Disconnect
	17, // 19: centrifugal.centrifugo.proxy.PublishResponse.result:type_name -> centrifugal.centrifugo.proxy.PublishResult
	1,  // 20: centrifugal.centrifugo.proxy.PublishResponse.error:type_name -> centrifugal.centrifugo.proxy.Error
	0,  // 21: centrifugal.centrifugo.proxy.PublishResponse.disconnect:type_name -> centrifugal.centrifugo.proxy.Disconnect
	20, // 22: centrifugal.centrifugo.proxy.RPCResponse.result:type_name -> centrifugal.centrifugo.proxy.RPCResult
	1,  // 23: centrifugal.centrifugo.proxy.RPCResponse.error:type_name -> centrifugal.centrifugo.proxy.Error
	0,  // 24: centrifugal.centrifugo.proxy.RPCResponse.disconnect:type_name -> centrifugal.centrifugo.proxy.Disconnect
	23, // 25: centrifugal.centrifugo.proxy.SubRefreshResponse.result:type_name -> centrifugal.centrifugo.proxy.SubRefreshResult
	1,  // 26: centrifugal.centrifugo.proxy.SubRefreshResponse.error:type_name -> centrifugal.centrifugo.proxy.Error
	0,  // 27: centrifugal.centrifugo.proxy.SubRefreshResponse.disconnect:type_name -> centrifugal.centrifugo.proxy.Disconnect
	33, // 28: centrifugal.centrifugo.proxy.Publication.tags:type_name -> centrifugal.centrifugo.proxy.Publication.TagsEntry
	10, // 29: centrifugal.centrifugo.proxy.StreamSubscribeRequest.subscribe_request:type_name -> centrifugal.centrifugo.proxy.SubscribeRequest
	25, // 30: centrifugal.centrifugo.proxy.StreamSubscribeRequest.publication:type_name -> centrifugal.centrifugo.proxy.Publication
	15, // 31: centrifugal.centrifugo.proxy.StreamSubscribeResponse.subscribe_response:type_name -> centrifugal.centrifugo.proxy.SubscribeResponse
	25, // 32: centrifugal.centrifugo.proxy.StreamSubscribeResponse.publication:type_name -> centrifugal.centrifugo.proxy.Publication
	29, // 33: centrifugal.centrifugo.proxy.NotifyChannelStateRequest.events:type_name -> centrifugal.centrifugo.proxy.ChannelEvent
	31, // 34: centrifugal.centrifugo.proxy.NotifyChannelStateResponse.result:type_name -> centrifugal.centrifugo.proxy.NotifyChannelStateResult
	1,  // 35: centrifugal.centrifugo.proxy.NotifyChannelStateResponse.error:type_name -> centrifugal.centrifugo.proxy.Error
	3,  // 36: centrifugal.centrifugo.proxy.ConnectResult.SubsEntry.value:type_name -> centrifugal.centrifugo.proxy.SubscribeOptions
	2,  // 37: centrifugal.centrifugo.proxy.CentrifugoProxy.Connect:input_type -> centrifugal.centrifugo.proxy.ConnectRequest
	7,  // 38: centrifugal.centrifugo.proxy.CentrifugoProxy.Refresh:input_type -> centrifugal.centrifugo.proxy.RefreshRequest
	10, // 39: centrifugal.centrifugo.proxy.CentrifugoProxy.Subscribe:input_type -> centrifugal.centrifugo.proxy.SubscribeRequest
	16, // 40: centrifugal.centrifugo.proxy.CentrifugoProxy.Publish:input_type -> centrifugal.centrifugo.proxy.PublishRequest
	19, // 41: centrifugal.centrifugo.proxy.CentrifugoProxy.RPC:input_type -> centrifugal.centrifugo.proxy.RPCRequest
	22, // 42: centrifugal.centrifugo.proxy.CentrifugoProxy.SubRefresh:input_type -> centrifugal.centrifugo.proxy.SubRefreshRequest
	10, // 43: centrifugal.centrifugo.proxy.CentrifugoProxy.SubscribeUnidirectional:input_type -> centrifugal.centrifugo.proxy.SubscribeRequest
	26, // 44: centrifugal.centrifugo.proxy.CentrifugoProxy.SubscribeBidirectional:input_type -> centrifugal.centrifugo.proxy.StreamSubscribeRequest
	28, // 45: centrifugal.centrifugo.proxy.CentrifugoProxy.NotifyChannelState:input_type -> centrifugal.centrifugo.proxy.NotifyChannelStateRequest
	6,  // 46: centrifugal.centrifugo.proxy.CentrifugoProxy.Connect:output_type -> centrifugal.centrifugo.proxy.ConnectResponse
	9,  // 47: centrifugal.centrifugo.proxy.CentrifugoProxy.Refresh:output_type -> centrifugal.centrifugo.proxy.RefreshResponse
	15, // 48: centrifugal.centrifugo.proxy.CentrifugoProxy.Subscribe:output_type -> centrifugal.centrifugo.proxy.SubscribeResponse
	18, // 49: centrifugal.centrifugo.proxy.CentrifugoProxy.Publish:output_type -> centrifugal.centrifugo.proxy.PublishResponse
	21, // 50: centrifugal.centrifugo.proxy.CentrifugoProxy.RPC:output_type -> centrifugal.centrifugo.proxy.RPCResponse
	24, // 51: centrifugal.centrifugo.proxy.CentrifugoProxy.SubRefresh:output_type -> centrifugal.centrifugo.proxy.SubRefreshResponse
	27, // 52: centrifugal.centrifugo.proxy.CentrifugoProxy.SubscribeUnidirectional:output_type -> centrifugal.centrifugo.proxy.StreamSubscribeResponse
	27, // 53: centrifugal.centrifugo.proxy.CentrifugoProxy.SubscribeBidirectional:output_type -> centrifugal.centrifugo.proxy.StreamSubscribeResponse
	30, // 54: centrifugal.centrifugo.proxy.CentrifugoProxy.NotifyChannelState:output_type -> centrifugal.centrifugo.proxy.NotifyChannelStateResponse
	46, // [46:55] is the sub-list for method output_type
	37, // [37:46] is the sub-list for method input_type
	37, // [37:37] is the sub-list for extension type_name
	37, // [37:37] is the sub-list for extension extendee
	0,  // [0:37] is the sub-list for field type_name
}

func init() { file_centrifugo_proxy_v1_proxy_proto_init() }
func file_centrifugo_proxy_v1_proxy_proto_init() {
	if File_centrifugo_proxy_v1_proxy_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_centrifugo_proxy_v1_proxy_proto_rawDesc), len(file_centrifugo_proxy_v1_proxy_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_centrifugo_proxy_v1_proxy_proto_goTypes,
		DependencyIndexes: file_centrifugo_proxy_v1_proxy_proto_depIdxs,
		MessageInfos:      file_centrifugo_proxy_v1_proxy_proto_msgTypes,
	}.Build()
	File_centrifugo_proxy_v1_proxy_proto = out.File
	file_centrifugo_proxy_v1_proxy_proto_goTypes = nil
	file_centrifugo_proxy_v1_proxy_proto_depIdxs = nil
}
