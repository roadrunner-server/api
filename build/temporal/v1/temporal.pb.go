// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: temporal/v1/temporal.proto

package temporalV1

import (
	v12 "github.com/roadrunner-server/api/v4/build/common/v1"
	v11 "go.temporal.io/api/common/v1"
	v1 "go.temporal.io/api/failure/v1"
	v13 "go.temporal.io/api/history/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Frame struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Messages      []*Message             `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Frame) Reset() {
	*x = Frame{}
	mi := &file_temporal_v1_temporal_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Frame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Frame) ProtoMessage() {}

func (x *Frame) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_v1_temporal_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Frame.ProtoReflect.Descriptor instead.
func (*Frame) Descriptor() ([]byte, []int) {
	return file_temporal_v1_temporal_proto_rawDescGZIP(), []int{0}
}

func (x *Frame) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

// Single communication message.
type Message struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// unique ID of the message (counter)
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// command name (if any)
	Command string `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
	// command options in json format.
	Options []byte `protobuf:"bytes,3,opt,name=options,proto3" json:"options,omitempty"`
	// error response.
	Failure *v1.Failure `protobuf:"bytes,4,opt,name=failure,proto3" json:"failure,omitempty"`
	// invocation or result payloads.
	Payloads *v11.Payloads `protobuf:"bytes,5,opt,name=payloads,proto3" json:"payloads,omitempty"`
	// invocation or result payloads.
	Header *v11.Header `protobuf:"bytes,6,opt,name=header,proto3" json:"header,omitempty"`
	// workflow history length
	HistoryLength int64 `protobuf:"varint,7,opt,name=history_length,json=historyLength,proto3" json:"history_length,omitempty"`
	// rr_run id
	RunId string `protobuf:"bytes,8,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	// task queue name
	TaskQueue string `protobuf:"bytes,9,opt,name=task_queue,json=taskQueue,proto3" json:"task_queue,omitempty"`
	// tick time
	TickTime string `protobuf:"bytes,10,opt,name=tick_time,json=tickTime,proto3" json:"tick_time,omitempty"`
	// replay flag
	Replay bool `protobuf:"varint,11,opt,name=replay,proto3" json:"replay,omitempty"`
	// continue as new flag
	ContinueAsNewSuggested bool `protobuf:"varint,12,opt,name=continue_as_new_suggested,json=continueAsNewSuggested,proto3" json:"continue_as_new_suggested,omitempty"`
	// returns the current length of history when called.
	// This value may change throughout the life of the workflow.
	HistorySize   int64 `protobuf:"varint,13,opt,name=history_size,json=historySize,proto3" json:"history_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_temporal_v1_temporal_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_v1_temporal_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_temporal_v1_temporal_proto_rawDescGZIP(), []int{1}
}

func (x *Message) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Message) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *Message) GetOptions() []byte {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *Message) GetFailure() *v1.Failure {
	if x != nil {
		return x.Failure
	}
	return nil
}

func (x *Message) GetPayloads() *v11.Payloads {
	if x != nil {
		return x.Payloads
	}
	return nil
}

func (x *Message) GetHeader() *v11.Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *Message) GetHistoryLength() int64 {
	if x != nil {
		return x.HistoryLength
	}
	return 0
}

func (x *Message) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

func (x *Message) GetTaskQueue() string {
	if x != nil {
		return x.TaskQueue
	}
	return ""
}

func (x *Message) GetTickTime() string {
	if x != nil {
		return x.TickTime
	}
	return ""
}

func (x *Message) GetReplay() bool {
	if x != nil {
		return x.Replay
	}
	return false
}

func (x *Message) GetContinueAsNewSuggested() bool {
	if x != nil {
		return x.ContinueAsNewSuggested
	}
	return false
}

func (x *Message) GetHistorySize() int64 {
	if x != nil {
		return x.HistorySize
	}
	return 0
}

type ReplayRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	WorkflowExecution *v11.WorkflowExecution `protobuf:"bytes,1,opt,name=workflow_execution,json=workflowExecution,proto3" json:"workflow_execution,omitempty"`
	WorkflowType      *v11.WorkflowType      `protobuf:"bytes,2,opt,name=workflow_type,json=workflowType,proto3" json:"workflow_type,omitempty"`
	SavePath          string                 `protobuf:"bytes,3,opt,name=save_path,json=savePath,proto3" json:"save_path,omitempty"`
	LastEventId       int64                  `protobuf:"varint,4,opt,name=last_event_id,json=lastEventId,proto3" json:"last_event_id,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ReplayRequest) Reset() {
	*x = ReplayRequest{}
	mi := &file_temporal_v1_temporal_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplayRequest) ProtoMessage() {}

func (x *ReplayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_v1_temporal_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplayRequest.ProtoReflect.Descriptor instead.
func (*ReplayRequest) Descriptor() ([]byte, []int) {
	return file_temporal_v1_temporal_proto_rawDescGZIP(), []int{2}
}

func (x *ReplayRequest) GetWorkflowExecution() *v11.WorkflowExecution {
	if x != nil {
		return x.WorkflowExecution
	}
	return nil
}

func (x *ReplayRequest) GetWorkflowType() *v11.WorkflowType {
	if x != nil {
		return x.WorkflowType
	}
	return nil
}

func (x *ReplayRequest) GetSavePath() string {
	if x != nil {
		return x.SavePath
	}
	return ""
}

func (x *ReplayRequest) GetLastEventId() int64 {
	if x != nil {
		return x.LastEventId
	}
	return 0
}

// https://cloud.google.com/apis/design/errors
type ReplayResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *v12.Status            `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplayResponse) Reset() {
	*x = ReplayResponse{}
	mi := &file_temporal_v1_temporal_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplayResponse) ProtoMessage() {}

func (x *ReplayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_v1_temporal_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplayResponse.ProtoReflect.Descriptor instead.
func (*ReplayResponse) Descriptor() ([]byte, []int) {
	return file_temporal_v1_temporal_proto_rawDescGZIP(), []int{3}
}

func (x *ReplayResponse) GetStatus() *v12.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type History struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	History       *v13.History           `protobuf:"bytes,1,opt,name=history,proto3" json:"history,omitempty"`
	WorkflowType  *v11.WorkflowType      `protobuf:"bytes,2,opt,name=workflow_type,json=workflowType,proto3" json:"workflow_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *History) Reset() {
	*x = History{}
	mi := &file_temporal_v1_temporal_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *History) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*History) ProtoMessage() {}

func (x *History) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_v1_temporal_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use History.ProtoReflect.Descriptor instead.
func (*History) Descriptor() ([]byte, []int) {
	return file_temporal_v1_temporal_proto_rawDescGZIP(), []int{4}
}

func (x *History) GetHistory() *v13.History {
	if x != nil {
		return x.History
	}
	return nil
}

func (x *History) GetWorkflowType() *v11.WorkflowType {
	if x != nil {
		return x.WorkflowType
	}
	return nil
}

var File_temporal_v1_temporal_proto protoreflect.FileDescriptor

const file_temporal_v1_temporal_proto_rawDesc = "" +
	"\n" +
	"\x1atemporal/v1/temporal.proto\x12\vtemporal.v1\x1a\x1bcommon/v1/grpc_status.proto\x1a$temporal/api/common/v1/message.proto\x1a%temporal/api/failure/v1/message.proto\x1a%temporal/api/history/v1/message.proto\"9\n" +
	"\x05Frame\x120\n" +
	"\bmessages\x18\x01 \x03(\v2\x14.temporal.v1.MessageR\bmessages\"\xef\x03\n" +
	"\aMessage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x12\x18\n" +
	"\acommand\x18\x02 \x01(\tR\acommand\x12\x18\n" +
	"\aoptions\x18\x03 \x01(\fR\aoptions\x12:\n" +
	"\afailure\x18\x04 \x01(\v2 .temporal.api.failure.v1.FailureR\afailure\x12<\n" +
	"\bpayloads\x18\x05 \x01(\v2 .temporal.api.common.v1.PayloadsR\bpayloads\x126\n" +
	"\x06header\x18\x06 \x01(\v2\x1e.temporal.api.common.v1.HeaderR\x06header\x12%\n" +
	"\x0ehistory_length\x18\a \x01(\x03R\rhistoryLength\x12\x15\n" +
	"\x06run_id\x18\b \x01(\tR\x05runId\x12\x1d\n" +
	"\n" +
	"task_queue\x18\t \x01(\tR\ttaskQueue\x12\x1b\n" +
	"\ttick_time\x18\n" +
	" \x01(\tR\btickTime\x12\x16\n" +
	"\x06replay\x18\v \x01(\bR\x06replay\x129\n" +
	"\x19continue_as_new_suggested\x18\f \x01(\bR\x16continueAsNewSuggested\x12!\n" +
	"\fhistory_size\x18\r \x01(\x03R\vhistorySize\"\xf5\x01\n" +
	"\rReplayRequest\x12X\n" +
	"\x12workflow_execution\x18\x01 \x01(\v2).temporal.api.common.v1.WorkflowExecutionR\x11workflowExecution\x12I\n" +
	"\rworkflow_type\x18\x02 \x01(\v2$.temporal.api.common.v1.WorkflowTypeR\fworkflowType\x12\x1b\n" +
	"\tsave_path\x18\x03 \x01(\tR\bsavePath\x12\"\n" +
	"\rlast_event_id\x18\x04 \x01(\x03R\vlastEventId\";\n" +
	"\x0eReplayResponse\x12)\n" +
	"\x06status\x18\x01 \x01(\v2\x11.common.v1.StatusR\x06status\"\x90\x01\n" +
	"\aHistory\x12:\n" +
	"\ahistory\x18\x01 \x01(\v2 .temporal.api.history.v1.HistoryR\ahistory\x12I\n" +
	"\rworkflow_type\x18\x02 \x01(\v2$.temporal.api.common.v1.WorkflowTypeR\fworkflowTypeB\x88\x01Z@github.com/roadrunner-server/api/v4/build/temporal/v1;temporalV1\xca\x02\x1aRoadRunner\\Temporal\\DTO\\V1\xe2\x02&RoadRunner\\Temporal\\DTO\\V1\\GPBMetadatab\x06proto3"

var (
	file_temporal_v1_temporal_proto_rawDescOnce sync.Once
	file_temporal_v1_temporal_proto_rawDescData []byte
)

func file_temporal_v1_temporal_proto_rawDescGZIP() []byte {
	file_temporal_v1_temporal_proto_rawDescOnce.Do(func() {
		file_temporal_v1_temporal_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_temporal_v1_temporal_proto_rawDesc), len(file_temporal_v1_temporal_proto_rawDesc)))
	})
	return file_temporal_v1_temporal_proto_rawDescData
}

var file_temporal_v1_temporal_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_temporal_v1_temporal_proto_goTypes = []any{
	(*Frame)(nil),                 // 0: temporal.v1.Frame
	(*Message)(nil),               // 1: temporal.v1.Message
	(*ReplayRequest)(nil),         // 2: temporal.v1.ReplayRequest
	(*ReplayResponse)(nil),        // 3: temporal.v1.ReplayResponse
	(*History)(nil),               // 4: temporal.v1.History
	(*v1.Failure)(nil),            // 5: temporal.api.failure.v1.Failure
	(*v11.Payloads)(nil),          // 6: temporal.api.common.v1.Payloads
	(*v11.Header)(nil),            // 7: temporal.api.common.v1.Header
	(*v11.WorkflowExecution)(nil), // 8: temporal.api.common.v1.WorkflowExecution
	(*v11.WorkflowType)(nil),      // 9: temporal.api.common.v1.WorkflowType
	(*v12.Status)(nil),            // 10: common.v1.Status
	(*v13.History)(nil),           // 11: temporal.api.history.v1.History
}
var file_temporal_v1_temporal_proto_depIdxs = []int32{
	1,  // 0: temporal.v1.Frame.messages:type_name -> temporal.v1.Message
	5,  // 1: temporal.v1.Message.failure:type_name -> temporal.api.failure.v1.Failure
	6,  // 2: temporal.v1.Message.payloads:type_name -> temporal.api.common.v1.Payloads
	7,  // 3: temporal.v1.Message.header:type_name -> temporal.api.common.v1.Header
	8,  // 4: temporal.v1.ReplayRequest.workflow_execution:type_name -> temporal.api.common.v1.WorkflowExecution
	9,  // 5: temporal.v1.ReplayRequest.workflow_type:type_name -> temporal.api.common.v1.WorkflowType
	10, // 6: temporal.v1.ReplayResponse.status:type_name -> common.v1.Status
	11, // 7: temporal.v1.History.history:type_name -> temporal.api.history.v1.History
	9,  // 8: temporal.v1.History.workflow_type:type_name -> temporal.api.common.v1.WorkflowType
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_temporal_v1_temporal_proto_init() }
func file_temporal_v1_temporal_proto_init() {
	if File_temporal_v1_temporal_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_temporal_v1_temporal_proto_rawDesc), len(file_temporal_v1_temporal_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_temporal_v1_temporal_proto_goTypes,
		DependencyIndexes: file_temporal_v1_temporal_proto_depIdxs,
		MessageInfos:      file_temporal_v1_temporal_proto_msgTypes,
	}.Build()
	File_temporal_v1_temporal_proto = out.File
	file_temporal_v1_temporal_proto_goTypes = nil
	file_temporal_v1_temporal_proto_depIdxs = nil
}
